mat = matrix(rnorm(1000), 100, 10)
hcr = hclust(dist(mat))
hcc = hclust(dist(t(mat)))
if((class(hcr) == "hclust") || hcr) print("ok")
ifelse((class(hcr) == "hclust") || hcr), TRUE, FALSE)
ifelse((class(hcr) == "hclust") || hcr, TRUE, FALSE)
pheatmap(mat)
?pheatmap
pheatmap(mat, cluster_rows = hcr, cluster_cols = hcc)
?ifelse
?rank
iris
mat = iris[, 1:4]
str(mat)
mat = as.matrix(iris[, 1:4])
str(mat)
mat = as.matrix(iris[, 1:4])
distance = "euclidean"
linkage = "maximum"
ordering = "original"
calcClustering = function(mat, distance, linkage){
#calculate distances between rows of mat and clustering
if(distance == "no clustering"){
return(NA)
} else if(distance == "correlation"){
d = as.dist(1 - cor(t(mat)))
} else {
d = dist(mat, method = distance)
}
hclust(d, method = linkage)
}
hc = calcClustering(mat, distance, linkage)
?hclust
mat = as.matrix(iris[, 1:4])
distance = "euclidean"
linkage = "complete"
ordering = "original"
hc = calcClustering(mat, distance, linkage)
hc
mat = t(as.matrix(iris[, 1:4]))
distance = "euclidean"
linkage = "complete"
ordering = "original"
hc = calcClustering(mat, distance, linkage)
hc
mat = as.matrix(iris[, 1:4])
distance = "euclidean"
linkage = "complete"
ordering = "original"
hc = calcClustering(mat, distance, linkage)
hc
wts = rank(-apply(mat, 1, median, na.rm = TRUE))
wts
hc2 = as.hclust(reorder(as.dendrogram(hc), wts, agglo.FUN = mean))
hc2
str(hc2)
class(hc2)
str(hc)
?pheatmap
remove.packages("pheatmap")
library(devtools); install_github("taunometsalu/pheatmap")
library(pheatmap)
mat = matrix(rnorm(1000), 100, 10)
hcr = hclust(dist(mat))
hcc = hclust(dist(t(mat)))
if((class(hcr) == "hclust") || hcr) print("ok")
ifelse((class(hcr) == "hclust") || hcr, TRUE, FALSE)
pheatmap(mat, cluster_rows = hcr, cluster_cols = hcc)
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Gene", 1:20, sep = "")
annotation_col = data.frame(CellType = factor(rep(c("CT1", "CT2"), 5)), Time = 1:5)
rownames(annotation_col) = paste("Test", 1:10, sep = "")
annotation_row = data.frame(GeneClass = factor(rep(c("Path1", "Path2", "Path3"), c(10, 4, 6))))
rownames(annotation_row) = paste("Gene", 1:20, sep = "")
ph = pheatmap(test, annotation_col = annotation_col)
pheatmap(test, annotation_col = annotation_col, annotation_legend = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_legend = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE)
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Gene", 1:20, sep = "")
annotation_col = data.frame(CellTypeXXXXXXXXXXXX = factor(rep(c("CT1", "CT2"), 5)), Time = 1:5)
rownames(annotation_col) = paste("Test", 1:10, sep = "")
annotation_row = data.frame(GeneClassXXXXXXXXXXXX = factor(rep(c("Path1", "Path2", "Path3"), c(10, 4, 6))))
rownames(annotation_row) = paste("Gene", 1:20, sep = "")
ph = pheatmap(test, annotation_col = annotation_col)
pheatmap(test, annotation_col = annotation_col, annotation_legend = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row)
ph = pheatmap(test, annotation_col = annotation_col)
pheatmap(test, annotation_col = annotation_col, annotation_legend = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE)
?pheatmap
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE, fontsize_row = 3)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3)
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Gene", 1:20, sep = "")
annotation_col = data.frame(CellTypeXXXXXXXXXXXX = factor(rep(c("CT1", "CT2"), 5)), Time = 1:5)
rownames(annotation_col) = paste("Test", 1:10, sep = "")
annotation_row = data.frame(GeneClassIIIIIIIIIIII = factor(rep(c("Path1", "Path2", "Path3"), c(10, 4, 6))))
rownames(annotation_row) = paste("Gene", 1:20, sep = "")
ph = pheatmap(test, annotation_col = annotation_col)
pheatmap(test, annotation_col = annotation_col, annotation_legend = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3)
annotation_col = data.frame(CellTypeXXXXXXXXXXXX = factor(rep(c("CT1", "CT2"), 5)), Time = 1:5)
rownames(annotation_col) = paste("Test", 1:10, sep = "")
annotation_row = data.frame(GeneClassIIIIIIIIIIII12 = factor(rep(c("Path1", "Path2", "Path3"), c(10, 4, 6))))
rownames(annotation_row) = paste("Gene", 1:20, sep = "")
ph = pheatmap(test, annotation_col = annotation_col)
pheatmap(test, annotation_col = annotation_col, annotation_legend = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3)
?strwidth
colnames(annotation_col)
rownames(mat)
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Gene", 1:20, sep = "")
annotation_col = data.frame(CellTypeXXXXXXXXXXXX = factor(rep(c("CT1", "CT2"), 5)), Time = 1:5)
rownames(annotation_col) = paste("Test", 1:10, sep = "")
annotation_row = data.frame(GeneClassIIIIIIIIIIII12 = factor(rep(c("Path1", "Path2", "Path3"), c(10, 4, 6))))
rownames(annotation_row) = paste("Gene", 1:20, sep = "")
t = c(rownames(mat), colnames(annotation_col))
t
t = c(rownames(test), colnames(annotation_col))
t
strwidth(t, units = 'in')
t = c(rownames(test), colnames(annotation_col))
?strwidth
strwidth(t, units = 'in', fontsize = 3)
strwidth(t, units = 'in', ps = 3)
strwidth(t, units = 'in', ps = 4)
strwidth(t, units = 'in', cex = 4)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3)
remove.packages("pheatmap")
library(devtools); install_github("taunometsalu/pheatmap")
library(pheatmap)
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Gene", 1:20, sep = "")
annotation_col = data.frame(CellTypeXXXXXXXXXXXX = factor(rep(c("CT1", "CT2"), 5)), Time = 1:5)
rownames(annotation_col) = paste("Test", 1:10, sep = "")
annotation_row = data.frame(GeneClassIIIIIIIIIIII12 = factor(rep(c("Path1", "Path2", "Path3"), c(10, 4, 6))))
rownames(annotation_row) = paste("Gene", 1:20, sep = "")
ph = pheatmap(test, annotation_col = annotation_col)
pheatmap(test, annotation_col = annotation_col, annotation_legend = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3)
pheatmap
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_row = F)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_row = T)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_row = F)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_col = F)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_col = T)
?pheatmap
remove.packages("pheatmap")
library(devtools); install_github("taunometsalu/pheatmap")
library(pheatmap)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_col = T)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_col = T)
library(stringr)
options(stringsAsFactors = FALSE)
#pheatmapi näited
#library(pheatmap)
path = "/Users/taunome/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca/"
library(RColorBrewer); library(gtable); library(scales)
library(grid); source(str_c(path, "R/pheatmap.r"))
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Gene", 1:20, sep = "")
annotation_col = data.frame(CellTypeXXXXXXXXXXXX = factor(rep(c("CT1", "CT2"), 5)), Time = 1:5)
rownames(annotation_col) = paste("Test", 1:10, sep = "")
annotation_row = data.frame(GeneClassIIIIIIIIIIII12 = factor(rep(c("Path1", "Path2", "Path3"), c(10, 4, 6))))
rownames(annotation_row) = paste("Gene", 1:20, sep = "")
ph = pheatmap(test, annotation_col = annotation_col)
pheatmap(test, annotation_col = annotation_col, annotation_legend = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_col = T)
path = "/Users/taunome/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca/"
library(RColorBrewer); library(gtable); library(scales)
library(grid); source(str_c(path, "R/pheatmap.r"))
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_col = T)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_col = T)
library(stringr)
options(stringsAsFactors = FALSE)
#pheatmapi näited
#library(pheatmap)
path = "/Users/taunome/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca/"
library(RColorBrewer); library(gtable); library(scales)
library(grid); source(str_c(path, "R/pheatmap.r"))
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Gene", 1:20, sep = "")
annotation_col = data.frame(CellTypeXXXXXXXXXXXX = factor(rep(c("CT1", "CT2"), 5)), Time = 1:5)
rownames(annotation_col) = paste("Test", 1:10, sep = "")
annotation_row = data.frame(GeneClassIIIIIIIIIIII12 = factor(rep(c("Path1", "Path2", "Path3"), c(10, 4, 6))))
rownames(annotation_row) = paste("Gene", 1:20, sep = "")
ph = pheatmap(test, annotation_col = annotation_col)
pheatmap(test, annotation_col = annotation_col, annotation_legend = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_col = T)
coln = colnames(test)
coln
rown = colnames(test)
rown
rown = rownames(test)
rown
annotation_col
t = rown
tw = strwidth(t, units = 'in')
t
tw
t = c(t, colnames(annotation_col))
tw = c(tw, strwidth(colnames(annotation_col), units = 'in', cex = fontsize / fontsize_row))
?pheatmap
rown = rownames(test)
fontsize = 10
fontsize_row = 3
t = rown
tw = strwidth(t, units = 'in')
if(annotation_names_col){
t = c(t, colnames(annotation_col))
tw = c(tw, strwidth(colnames(annotation_col), units = 'in', cex = fontsize / fontsize_row))
}
t = rown
tw = strwidth(t, units = 'in')
t = c(t, colnames(annotation_col))
tw = c(tw, strwidth(colnames(annotation_col), units = 'in', cex = fontsize / fontsize_row))
t
tw
longest_rown = which.max(tw)
longest_rown
t[longest_rown]
fontsize_row
longest_rown
length(rown)
ifelse(longest_rown <= length(rown), fontsize_row, fontsize)
path = "/Users/taunome/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca/"
library(RColorBrewer); library(gtable); library(scales)
library(grid); source(str_c(path, "R/pheatmap.r"))
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_col = T)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 4, annotation_names_col = T)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 8, annotation_names_col = T)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 20, annotation_names_col = T)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 40, annotation_names_col = T)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 30, annotation_names_col = T)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 35, annotation_names_col = T)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 45, annotation_names_col = T)
remove.packages("pheatmap")
library(devtools); install_github("taunometsalu/pheatmap")
library(pheatmap)
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Gene", 1:20, sep = "")
annotation_col = data.frame(CellTypeXXXXXXXXXXXX = factor(rep(c("CT1", "CT2"), 5)), Time = 1:5)
rownames(annotation_col) = paste("Test", 1:10, sep = "")
annotation_row = data.frame(GeneClassIIIIIIIIIIII12 = factor(rep(c("Path1", "Path2", "Path3"), c(10, 4, 6))))
rownames(annotation_row) = paste("Gene", 1:20, sep = "")
ph = pheatmap(test, annotation_col = annotation_col)
pheatmap(test, annotation_col = annotation_col, annotation_legend = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 45, annotation_names_col = T)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_col = T)
path = "/Users/taunome/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca/"
library(RColorBrewer); library(gtable); library(scales)
library(grid); source(str_c(path, "R/pheatmap.r"))
library(stringr)
options(stringsAsFactors = FALSE)
#pheatmapi näited
#library(pheatmap)
path = "/Users/taunome/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca/"
library(RColorBrewer); library(gtable); library(scales)
library(grid); source(str_c(path, "R/pheatmap.r"))
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Gene", 1:20, sep = "")
annotation_col = data.frame(CellTypeXXXXXXXXXXXX = factor(rep(c("CT1", "CT2"), 5)), Time = 1:5)
rownames(annotation_col) = paste("Test", 1:10, sep = "")
annotation_row = data.frame(GeneClassIIIIIIIIIIII12 = factor(rep(c("Path1", "Path2", "Path3"), c(10, 4, 6))))
rownames(annotation_row) = paste("Gene", 1:20, sep = "")
ph = pheatmap(test, annotation_col = annotation_col)
pheatmap(test, annotation_col = annotation_col, annotation_legend = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_names_row = FALSE, annotation_names_col = FALSE)
pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, fontsize_row = 3, annotation_names_col = T)
coln = NULL
t = coln
tw = strwidth(t, units = 'in', cex = fontsize_col / fontsize)
tw = strwidth(t, units = 'in')
tw
c(NULL, "a")
t = ""
strwidth(t, units = 'in')
?pheatmap
?cutree
?pheatmap
nrow(NULL)
nrow(NULL) | 1
nrow(NULL) || 1
ifelse(NULL, 1, 0)
ifelse(is.null(NULL), 1, 0)
colnames(NULL)
head(NA)
head(NULL)
list(a=5, b = NULL, c=5)
l=list(a=5, b = NULL, c=5)
l$b = NULL
l
?list
l = list(a = NULL, ab = 4, c = 5)
l
l$a
l$ab
l$a = NULL
l
l$a
names(l)
l$a = NULL
l
?list
c(l, a = 5)
c(l, a = NULL)
list(NULL)
2**128
256**4
library(stringr)
options(stringsAsFactors = FALSE)
load(file = "~/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca/custom/hgnc_pam50.RData")
load(file = "~/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca_related/custom/hgnc_pam50.RData")
ls()
rm(list=ls())
ls()
load(file = "~/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca_related/custom/hgnc_pam50.RData")
ls()
g
library(breastCancerNKI)
data(nki)
#pData(nki); fData(nki)
hgnc = as.vector(fData(nki)$HUGO.gene.symbol)
nki
data(nki)
library(breastCancerNKI)
install.packages("breastCancerNKI")
source("http://bioconductor.org/biocLite.R"); biocLite("breastCancerNKI")
library(breastCancerNKI)
data(nki)
hgnc = as.vector(fData(nki)$HUGO.gene.symbol)
hgnc
f = "/Users/taunome/owncloud/dok/Ülikool/BIIT/Projektid/predect/shiny/upload_pca_related/custom/nki_dataset/geneanno.csv"
csv = read.csv(f)
csv
csv = read.csv2(f)
csv
sum(csv$gene %in% hgnc)
which(!(csv$gene %in% hgnc))
csv$gene[which(!(csv$gene %in% hgnc))]
f = "~/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca_related/custom/nki_dataset/geneanno.csv"
csv = read.csv2(f)
csv$gene[which(!(csv$gene %in% hgnc))]
"MELPH" %in% hgnc
"SLAC2-A" %in% hgnc
"SLAC2A" %in% hgnc
"SLAC2" %in% hgnc
"L1RK3" %in% hgnc
fData(nki)
head(fData(nki))
ncbi = as.vector(fData(nki)$NCBI.gene.symbol)
c("MLPH", "L1RK3") %in% ncbi
csv$gene[which(!(csv$gene %in% hgnc))]
c("MELPH", "L1RK3", "SLC39A6", "LIV-1", "LIV1") %in% hgnc
c("MELPH", "L1RK3", "SLC39A6", "LIV-1", "LIV1", "ZIP-6", "ZIP6") %in% hgnc
csv$gene[which(!(csv$gene %in% hgnc))]
c("MELPH", "L1RK3", "SLC39A6", "LIV-1", "LIV1", "ZIP-6", "ZIP6", "NUF2") %in% hgnc
csv$gene[which(!(csv$gene %in% hgnc))]
csv$gene[which(!(csv$gene %in% hgnc))]
f = "~/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca_related/custom/nki_dataset/geneanno.csv"
csv = read.csv2(f)
csv$gene[which(!(csv$gene_hgnc %in% hgnc))]
csv$gene_hgnc
hgnc
csv$gene_hgnc[which(!(csv$gene_hgnc %in% hgnc))]
w = which(hgnc %in% csv$gene_hgnc)
w
exp = exprs(nki)[w, ]
exp[is.nan(exp)] = NA #NaN annab praegu vea
rownames(exp) = str_c(hgnc[w], " (", rownames(exp), ")")
rownames(exp)
w = which(hgnc %in% csv$gene_original)
w
w = which(hgnc %in% csv$gene_hgnc)
w
hgnc[20859]
w = which(hgnc %in% csv$gene_hgnc)
exp = exprs(nki)[w, ]
exp[is.nan(exp)] = NA #NaN annab praegu vea
rownames(exp) = str_c(hgnc[w], " (", rownames(exp), ")")
w = which(hgnc %in% csv$gene_hgnc)
exp = exprs(nki)[w, ]
exp[is.nan(exp)] = NA #NaN annab praegu vea
rownames(exp) = str_c(hgnc[w], " (", rownames(exp), ")")
rmAnno = c("samplename", "dataset", "id", "filename", "size", "age", "pgr", "her2", "t.dmfs", "t.rfs", "tissue", "t.os", "e.rfs", "e.os") #pole õrna aimugi, mis asi on e.os
anno = pData(nki)
#table(anno$e.dmfs, anno$e.rfs) #täpselt samad
anno = anno[, !(colnames(anno) %in% rmAnno)]
anno = data.frame(anno[, -1], anno[, 1, drop = FALSE])
#anno = anno[anno$series == "NKI", ]
#sapply(anno, function(x) table(x))
find = c("series", "er", "grade", "brca.mutation", "e.dmfs", "node", "treatment")
replace = c("Study", "ER status", "Histological grade", "BRCA mutation", "Metastasis", "Lymph node status", "Treatment")
library(plyr)
colnames(anno) = mapvalues(colnames(anno), find, replace)
for(i in 1:ncol(anno)){
anno[is.na(anno[, i]), i] = "NA"
}
anno
head(exp)
hgnc[w]
m = match(hgnc[w], csv$gene_hgnc)
m
annoRow = csv[m, ]
annoRow
rownames(annoRow) = rownames(exp)
head(annoRow)
tail(annoRow)
emptyMat = matrix("", ncol(anno), ncol(annoRow))
rownames(emptyMat) = colnames(anno)
colnames(emptyMat) = colnames(annoRow)
df = cbind(rbind(emptyMat, annoRow), rbind(t(anno), exp))
df
head(df)
df[1:15, 1:15]
head(csv)
m = match(hgnc[w], csv$gene_hgnc)
annoRow = csv[m, 3:4]
colnames(annoRow) = c("Related subtype", "Expression in subtype")
rownames(annoRow) = rownames(exp)
emptyMat = matrix("", ncol(anno), ncol(annoRow))
rownames(emptyMat) = colnames(anno)
colnames(emptyMat) = colnames(annoRow)
#df = rbind(t(anno), exp)
df = cbind(rbind(emptyMat, annoRow), rbind(t(anno), exp))
setwd("~/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca/datasets/")
write.csv2(df, "nki.csv")
anno
head(anno)
rev(head(anno))
(12076-9313) / (10870-8299)
(12076-9313) / (12076-9313+10870-8299)
12582-12076
506 * 0.518
506 * 0.482
262-171
244 - 91
228/424
load(file = "~/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca_related/custom/newPheatmap/settings_test_nki.RData")
rm(list=ls())
load(file = "~/Dokumendid/Ülikool/BIIT/Projektid/predect/shiny/upload_pca_related/custom/newPheatmap/settings_test_nki.RData")
ls()
data
?pheatmap
names(data)
pheatmap(mat, annotation_row = annoRow, annotation_col = annoCol)
attach(data)
pheatmap(mat, annotation_row = annoRow, annotation_col = annoCol)
?pheatmap
pheatmap(mat, annotation_row = annoRow, annotation_col = annoCol, fontsize_row = 4)
pheatmap(mat, annotation_row = annoRow, annotation_col = annoCol, fontsize_row = 3)
